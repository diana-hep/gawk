import rejig.pybytecode

def check(x):
    env = {}
    exec("def f():\n    " + "\n    ".join(x.split("\n")), env)
    print(x, "\t\t|\t\t", rejig.pybytecode.BytecodeWalker(env["f"]).ast().dump())

# check('"hello"')
# check('''.3''')
# check('''-3''')
# check('''--3''')
# check('''+3''')
# check('''++3''')
# check('''+-3''')
# check('''3e1''')
# check('''-3e1''')
# check('''+3e1''')
# check('0x123')
# check('0o123')
# check('3+4j')

# check('''[]''')
# check('''[3]''')
# check('''[3,]''')
# check('''[3, 4]''')
# check('''[3, 4,]''')
# check('''[3, 4, 5]''')
# check('''[3, 4, 5,]''')
# check('''[3, 4, 5, 6]''')
# check('''[3, 4, 5, 6,]''')

# check('''[[1], 2, 3, 4, 5]''')
# check('''[[1, 2], 3, 4, 5]''')
# check('''[[1, 2, 3], 4, 5]''')
# check('''[[1, 2, 3, 4], 5]''')
# check('''[[1, 2, 3, 4, 5]]''')
# check('''[[[1], 2, 3, 4, 5]]''')
# check('''[[[1, 2], 3, 4, 5]]''')
# check('''[[[1, 2, 3], 4, 5]]''')
# check('''[[[1, 2, 3, 4], 5]]''')
# check('''[[[1, 2, 3, 4, 5]]]''')

# check('''[1, 2, 3, 4, [5]]''')
# check('''[1, 2, 3, [4, 5]]''')
# check('''[1, 2, [3, 4, 5]]''')
# check('''[1, [2, 3, 4, 5]]''')
# check('''[[1, 2, 3, 4, [5]]]''')
# check('''[[1, 2, 3, [4, 5]]]''')
# check('''[[1, 2, [3, 4, 5]]]''')
# check('''[[1, [2, 3, 4, 5]]]''')

# check('''x = ()''')
# check('''x = (3)''')
# check('''x = (3,)''')
# check('''x = (3, 4)''')
# check('''x = (3, 4,)''')
# check('''x = (3, 4, 5)''')
# check('''x = (3, 4, 5,)''')
# check('''x = (3, 4, 5, 6)''')
# check('''x = (3, 4, 5, 6,)''')

# check('''x = ((1), 2, 3, 4, 5)''')
# check('''x = ((1, 2), 3, 4, 5)''')
# check('''x = ((1, 2, 3), 4, 5)''')
# check('''x = ((1, 2, 3, 4), 5)''')
# check('''x = ((1, 2, 3, 4, 5))''')
# check('''x = (((1), 2, 3, 4, 5))''')
# check('''x = (((1, 2), 3, 4, 5))''')
# check('''x = (((1, 2, 3), 4, 5))''')
# check('''x = (((1, 2, 3, 4), 5))''')
# check('''x = (((1, 2, 3, 4, 5)))''')

# check('''x = (1, 2, 3, 4, (5))''')
# check('''x = (1, 2, 3, (4, 5))''')
# check('''x = (1, 2, (3, 4, 5))''')
# check('''x = (1, (2, 3, 4, 5))''')
# check('''x = ((1, 2, 3, 4, (5)))''')
# check('''x = ((1, 2, 3, (4, 5)))''')
# check('''x = ((1, 2, (3, 4, 5)))''')
# check('''x = ((1, (2, 3, 4, 5)))''')

# check('''3
#     ''')
# check('''3
#     ''')
# check('''3
#     ''')
# check('''3
#     ''')
# check('''
# 3''')
# check('''
# 3''')
# check('''
# 3''')
# check('''
# 3''')

# check('''a''')
# check('''a.b''')
# check('''a.b.c''')
# check('''a.b.c.d''')
# check('''a.b.c.d.e''')
# check('''a[1]''')
# check('''a[1][2]''')
# check('''a[1][2][3]''')
# check('''a[1][2][3][4]''')
# check('''(9).stuff''')
# check('''((9)).stuff''')
# check('''(((9))).stuff''')

# check('''a[1]''')
# check('''a["hey"]''')
# check('''a[1:2]''')
# check('''a[:]''')
# check('''a[1:]''')
# check('''a[:1]''')
# check('''a[::]''')
# check('''a[1::]''')
# check('''a[:1:]''')
# check('''a[::1]''')
# check('''a[1:2:]''')
# check('''a[:1:2]''')
# check('''a[1::2]''')
# check('''a[1:2:3]''')
# check('''a[1,]''')
# check('''a["hey",]''')
# check('''a[1:2,]''')
# check('''a[:,]''')
# check('''a[1:,]''')
# check('''a[:1,]''')
# check('''a[::,]''')
# check('''a[1::,]''')
# check('''a[:1:,]''')
# check('''a[::1,]''')
# check('''a[1:2:,]''')
# check('''a[:1:2,]''')
# check('''a[1::2,]''')
# check('''a[1:2:3,]''')
# check('''a[1,5]''')
# check('''a["hey",5]''')
# check('''a[1:2,5]''')
# check('''a[:,5]''')
# check('''a[1:,5]''')
# check('''a[:1,5]''')
# check('''a[::,5]''')
# check('''a[1::,5]''')
# check('''a[:1:,5]''')
# check('''a[::1,5]''')
# check('''a[1:2:,5]''')
# check('''a[:1:2,5]''')
# check('''a[1::2,5]''')
# check('''a[1:2:3,5]''')
# check('''a[1,5,]''')
# check('''a["hey",5,]''')
# check('''a[1:2,5,]''')
# check('''a[:,5,]''')
# check('''a[1:,5,]''')
# check('''a[:1,5,]''')
# check('''a[::,5,]''')
# check('''a[1::,5,]''')
# check('''a[:1:,5,]''')
# check('''a[::1,5,]''')
# check('''a[1:2:,5,]''')
# check('''a[:1:2,5,]''')
# check('''a[1::2,5,]''')
# check('''a[1:2:3,5,]''')
# check('''a[1,"a":"b"]''')
# check('''a["hey","a":"b"]''')
# check('''a[1:2,"a":"b"]''')
# check('''a[:,"a":"b"]''')
# check('''a[1:,"a":"b"]''')
# check('''a[:1,"a":"b"]''')
# check('''a[::,"a":"b"]''')
# check('''a[1::,"a":"b"]''')
# check('''a[:1:,"a":"b"]''')
# check('''a[::1,"a":"b"]''')
# check('''a[1:2:,"a":"b"]''')
# check('''a[:1:2,"a":"b"]''')
# check('''a[1::2,"a":"b"]''')
# check('''a[1:2:3,"a":"b"]''')
# check('''a[1,"a":"b",]''')
# check('''a["hey","a":"b",]''')
# check('''a[1:2,"a":"b",]''')
# check('''a[:,"a":"b",]''')
# check('''a[1:,"a":"b",]''')
# check('''a[:1,"a":"b",]''')
# check('''a[::,"a":"b",]''')
# check('''a[1::,"a":"b",]''')
# check('''a[:1:,"a":"b",]''')
# check('''a[::1,"a":"b",]''')
# check('''a[1:2:,"a":"b",]''')
# check('''a[:1:2,"a":"b",]''')
# check('''a[1::2,"a":"b",]''')
# check('''a[1:2:3,"a":"b",]''')
# check('''a[1,5,6]''')
# check('''a["hey",5,6]''')
# check('''a[1:2,5,6]''')
# check('''a[:,5,6]''')
# check('''a[1:,5,6]''')
# check('''a[:1,5,6]''')
# check('''a[::,5,6]''')
# check('''a[1::,5,6]''')
# check('''a[:1:,5,6]''')
# check('''a[::1,5,6]''')
# check('''a[1:2:,5,6]''')
# check('''a[:1:2,5,6]''')
# check('''a[1::2,5,6]''')
# check('''a[1:2:3,5,6]''')
# check('''a[1,5,6,]''')
# check('''a["hey",5,6,]''')
# check('''a[1:2,5,6,]''')
# check('''a[:,5,6,]''')
# check('''a[1:,5,6,]''')
# check('''a[:1,5,6,]''')
# check('''a[::,5,6,]''')
# check('''a[1::,5,6,]''')
# check('''a[:1:,5,6,]''')
# check('''a[::1,5,6,]''')
# check('''a[1:2:,5,6,]''')
# check('''a[:1:2,5,6,]''')
# check('''a[1::2,5,6,]''')
# check('''a[1:2:3,5,6,]''')
# check('''a[1:[2]:3,[],5,6,]''')
# check('''a[1:[[2]]:3,[[]],5,6,]''')

# check('''a[2].three''')
# check('''a.three''')
# check('''a[2]''')
# check('''a.three[2]''')

# check('''x and y''')
# check('''x and y and z''')
# check('''x and y and z and w''')
# check('''not x''')
# check('''not x and y''')
# check('''x or y''')
# check('''x or y and z''')
# check('''x or y or z''')
# check('''not x or y and z''')
# check('''x or not y and z''')
# check('''x or y and not z''')
# check('''not x or not y and z''')
# check('''not x or y and not z''')
# check('''x or not y and not z''')
# check('''not x or not y and not z''')
# check('''x and y or z''')
# check('''not x and y or z''')
# check('''x and not y or z''')
# check('''x and y or not z''')
# check('''not x and not y or z''')
# check('''not x and y or not z''')
# check('''x and not y or not z''')

# check('''x < y''')
# check('''x > y''')
# check('''x == y''')
# check('''x >= y''')
# check('''x <= y''')
# check('''x != y''')
# check('''x in y''')
# check('''x not in y''')
# check('''1 < y < 2''')
# check('''1 < y == 2''')

# check('''(x) < y''')
# check('''(x) > y''')
# check('''(x) == y''')
# check('''(x) >= y''')
# check('''(x) <= y''')
# check('''(x) != y''')
# check('''(x) in y''')
# check('''(x) not in y''')
# check('''(1) < y < 2''')
# check('''(1) < y == 2''')

# check('''x < (y)''')
# check('''x > (y)''')
# check('''x == (y)''')
# check('''x >= (y)''')
# check('''x <= (y)''')
# check('''x != (y)''')
# check('''x in (y)''')
# check('''x not in (y)''')
# check('''1 < (y) < 2''')
# check('''1 < (y) == 2''')
# check('''1 < y < (2)''')
# check('''1 < y == (2)''')

# check('''(x) < (y)''')
# check('''(x) > (y)''')
# check('''(x) == (y)''')
# check('''(x) >= (y)''')
# check('''(x) <= (y)''')
# check('''(x) != (y)''')
# check('''(x) in (y)''')
# check('''(x) not in (y)''')
# check('''(1) < (y) < 2''')
# check('''(1) < (y) == 2''')
# check('''(1) < y < (2)''')
# check('''(1) < y == (2)''')

# check('''x + y''')
# check('''x + y + z''')
# check('''x + y + z + w''')
check('''x - y''')
check('''x - y - z''')
check('''x - y - z - w''')
check('''x - y + z - w''')
check('''x * y''')
check('''x * y * z''')
check('''x * y * z * w''')
check('''x * y - z * w''')
check('''x / y''')
check('''x / y / z''')
check('''x / y / z / w''')
check('''x / y * z / w''')
check('''x % y''')
check('''x % y % z''')
check('''x % y % z % w''')
check('''x % y / z % w''')
check('''x // y''')
check('''x // y // z''')
check('''x // y // z // w''')
check('''x // y % z // w''')
check('''+x''')
check('''-x''')
check('''++x''')
check('''+-x''')
check('''-+x''')
check('''--x''')
check('''+x + y''')
check('''-x + y''')
check('''++x + y''')
check('''+-x + y''')
check('''-+x + y''')
check('''--x + y''')
check('''x + +x''')
check('''x + -x''')
check('''x + ++x''')
check('''x + +-x''')
check('''x + -+x''')
check('''x + --x''')
check('''x ** y''')
check('''x ** y ** z''')
check('''x ** y ** z ** w''')
check('''x ** y // z ** w''')
check('''x.y**2''')

check('f()')
check('f(x)')
check('f(x,)')
check('f(x, y)')
check('f(x, y,)')
check('f(x, y, z)')
check('f(x, y, z,)')
check('f(x=1)')
check('f(x=1,)')
check('f(x=1, y)')
check('f(x, y=1,)')
check('f(x, y, z=1)')
check('f(x, y=1, z,)')

check('x = 1; x')

check('x = 1; x')
check(';x = 1; x')
check('x = 1; x;')
check(';x = 1; x;')
check(';;x = 1;; x;;')
check(';;;x = 1;;; x;;;')
check('x, = 1; x')
check('x, y = 1; x')
check('x, y, = 1; x')
check('x, y, z = 1; x')
check('x, y, z, = 1; x')

check("False")
check("True")
check("not x")
check("not x and not y")
check("not x and not y and not z")
check("not x and not y and not z")
check("not x and not y and not z")
check("not x or not y")
check("not x or not y or not z")
check("not x or not y or not z")
check("not x or not y or not z")
check("(not x or not y) and not z")
check("not x and (not y or not z)")

check("not x(1)")
check("not x(1) and not y(2)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) or not y(2)")
check("not x(1) or not y(2) or not z(3)")
check("not x(1) or not y(2) or not z(3)")
check("not x(1) or not y(2) or not z(3)")
check("(not x(1) or not y(2)) and not z(3)")
check("not x(1) and (not y(2) or not z(3))")

check("not x.a")
check("not x.a and not y.b")
check("not x.a and not y.b and not z.c")
check("not x.a and not y.b and not z.c")
check("not x.a and not y.b and not z.c")
check("not x.a or not y.b")
check("not x.a or not y.b or not z.c")
check("not x.a or not y.b or not z.c")
check("not x.a or not y.b or not z.c")
check("(not x.a or not y.b) and not z.c")
check("not x.a and (not y.b or not z.c)")

check("False")
check("True")
check("not x")
check("not x and not y")
check("not x and not y and not z")
check("not x and not y and not z")
check("not x and not y and not z")
check("not x or not y")
check("not x or not y or not z")
check("not x or not y or not z")
check("not x or not y or not z")
check("(not x or not y) and not z")
check("not x and (not y or not z)")

check("not x(1)")
check("not x(1) and not y(2)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) or not y(2)")
check("not x(1) or not y(2) or not z(3)")
check("not x(1) or not y(2) or not z(3)")
check("not x(1) or not y(2) or not z(3)")
check("(not x(1) or not y(2)) and not z(3)")
check("not x(1) and (not y(2) or not z(3))")

check("not x.a")
check("not x.a and not y.b")
check("not x.a and not y.b and not z.c")
check("not x.a and not y.b and not z.c")
check("not x.a and not y.b and not z.c")
check("not x.a or not y.b")
check("not x.a or not y.b or not z.c")
check("not x.a or not y.b or not z.c")
check("not x.a or not y.b or not z.c")
check("(not x.a or not y.b) and not z.c")
check("not x.a and (not y.b or not z.c)")

check("False")
check("True")
check("not x")
check("not x and not y")
check("not x and not y and not z")
check("not x and not y and not z")
check("not x and not y and not z")
check("not x or not y")
check("not x or not y or not z")
check("not x or not y or not z")
check("not x or not y or not z")
check("(not x or not y) and not z")
check("not x and (not y or not z)")

check("not x(1)")
check("not x(1) and not y(2)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) and not y(2) and not z(3)")
check("not x(1) or not y(2)")
check("not x(1) or not y(2) or not z(3)")
check("not x(1) or not y(2) or not z(3)")
check("not x(1) or not y(2) or not z(3)")
check("(not x(1) or not y(2)) and not z(3)")
check("not x(1) and (not y(2) or not z(3))")

check("not x.a")
check("not x.a and not y.b")
check("not x.a and not y.b and not z.c")
check("not x.a and not y.b and not z.c")
check("not x.a and not y.b and not z.c")
check("not x.a or not y.b")
check("not x.a or not y.b or not z.c")
check("not x.a or not y.b or not z.c")
check("not x.a or not y.b or not z.c")
check("(not x.a or not y.b) and not z.c")
check("not x.a and (not y.b or not z.c)")

check("x != y")
check("x == y")
check("x <= y")
check("x > y")
check("x >= y")
check("x < y")
check("x not in y")
check("x in y")

check("x == y and y == z")
check("x == y and y == z")
check("x == y or y == z")
check("x != y or y != z")
check("x != y or y != z")
check("x != y or y == z")

check("a and b and c and d and e")
check("a and b and c and d and e")

check("def g(): return 3.14")
check("""def g():
    return 3.14""")
check("def g(x): return x**2")
check("""def g(x):
    return x**2""")
check("lambda: 3.14")
check("lambda x: x**2")

check("1 if x == 0 else 2")
check("y = (1 if x == 0 else 2)")
check("1 if x == 0 else None")
check("""if x == 0:
    return 1
else:
    return 2""")
check("""if x == 0:
    return 1""")
check("""if x == 0:
    y = 1
else:
    y = 2""")
check("""if x == 0:
    y = 1""")
check("print()")
check("print(1)")
check("print(1, 2, 3)")

check("{}")
check("{1}")
check("{1, 2}")
check("{'x': 1}")
check("{'x': 1, 'y': 2}")

check("[x**2 for x in something]")
check("f([x**2 for x in something])")
check("f(x**2 for x in something)")

check("[x**2 for x in something if x > 0]")
check("[y**2 for x in something for y in x]")
check("[y**2 for x in something for y in x if x > 0]")
check("[y**2 for x in something for y in x if y > 0]")
check("[y**2 for x in something for y in x if x > 0 and y > 0]")

check("f(one=1)")
check("f(one=1, two=2)")
check("f(x, one=1)")
check("f(x, one=1, two=2)")

check("x[..., :]")

check('x = y = 1')
check('x = y = z = 1')
check('x, y = 1')
check('x, y = z = 1')
check('x = y, z = 1')

check('x.a = y = 1')
check('x.a = y = z = 1')
check('x.a, y = 1')
check('x.a, y = z = 1')
check('x.a = y, z = 1')

check('x = y.a = 1')
check('x = y.a = z = 1')
check('x, y.a = 1')
check('x, y.a = z = 1')
check('x = y.a, z = 1')

check('x = y = z.a = 1')
check('x, y = z.a = 1')
check('x = y, z.a = 1')

check('x[0] = y = 1')
check('x[0] = y = z = 1')
check('x[0], y = 1')
check('x[0], y = z = 1')
check('x[0] = y, z = 1')

check('x = y[0] = 1')
check('x = y[0] = z = 1')
check('x, y[0] = 1')
check('x, y[0] = z = 1')
check('x = y[0], z = 1')

check('x = y = z[0] = 1')
check('x, y = z[0] = 1')
check('x = y, z[0] = 1')

check('x[:, ...] = y = 1')
check('x[:, ...] = y = z = 1')
check('x[:, ...], y = 1')
check('x[:, ...], y = z = 1')
check('x[:, ...] = y, z = 1')

check('x = y[:, ...] = 1')
check('x = y[:, ...] = z = 1')
check('x, y[:, ...] = 1')
check('x, y[:, ...] = z = 1')
check('x = y[:, ...], z = 1')

check('x = y = z[:, ...] = 1')
check('x, y = z[:, ...] = 1')
check('x = y, z[:, ...] = 1')
